<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>uk.co.devworx</groupId>
    <artifactId>data-cornucopia</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>data-cornucopia</name>

	<properties>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<maven.core.version>3.3.9</maven.core.version>
		
		<maven.war.plugin.version>3.2.2</maven.war.plugin.version>
		<maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
		
		<maven.surefire.plugin.version>2.22.0</maven.surefire.plugin.version>
		<maven.failsafe.plugin.version>2.22.0</maven.failsafe.plugin.version>

		<junit.jupiter.version>5.6.0</junit.jupiter.version>
		
		<spark.version>3.1.1</spark.version>
		<jaxb.version>2.3.2</jaxb.version>
		
    	<tomcat.version>9.0.46</tomcat.version>
    	
    	<maven.compiler.initial.memory>1024M</maven.compiler.initial.memory>
        <maven.compiler.max.memory>2048M</maven.compiler.max.memory>
    	
    	<maven.fork.test.memory>-Xmx2048M</maven.fork.test.memory>
    	<maven.fork.count>1</maven.fork.count> <!--  If we run the datastore tests in parallel, we have some issues -->
    	<maven.fork.reuse>false</maven.fork.reuse>

		<maven.deploy.retry.count>3</maven.deploy.retry.count>

		<jacoco.version>0.8.5</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.language>java</sonar.language>
		
	</properties>
  
    <modules>
   		<module>xml-stomper</module>
   		<module>jdbc-runner</module>
   		<module>jdbc-schema-incrementer</module>
   		<module>etcetera</module>
   		<module>spark-examples</module>
		<module>excel-integration</module>
		<module>pdf-utilities</module>
    </modules>


	<profiles>
		<profile>

			<!-- Code Coverage - With Sonar as the reporting tool. Assuming you have Sonar Qube installed locally. You can do:

			mvn clean install -Pcoverage
			mvn sonar:sonar -Pcoverage -Dsonar.projectKey=data-cornucopia -Dsonar.host.url=http://localhost:9000 -Dsonar.login=XXXXXXX

			-->

			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<configuration>
							<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
							<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
							<output>file</output>
							<append>true</append>
							<excludes>
								<exclude>*MethodAccess</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>jacoco-initialize</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<phase>test-compile</phase>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

    <build>
        <pluginManagement>
            <plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
					<configuration>
						<retryFailedDeploymentCount>${maven.deploy.retry.count}</retryFailedDeploymentCount>
					</configuration>
				</plugin>

				<plugin>
				    <artifactId>maven-dependency-plugin</artifactId>
				    <version>${maven.dependency.plugin.version}</version>
				</plugin>
		            
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <fork>true</fork>
                        <meminitial>${maven.compiler.initial.memory}</meminitial>
                            <maxmem>${maven.compiler.max.memory}</maxmem>
                    </configuration>
                </plugin>
              
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                </plugin>

            </plugins>
            
        </pluginManagement>

        <plugins>
        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
	                <source>1.8</source>
			        <target>1.8</target>
			    </configuration>
            </plugin>
            
            <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

        </plugins>
    </build>

    <dependencies>
    
    </dependencies>

    <dependencyManagement>
    
        <dependencies>
        
        	<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
 
    		<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>4.0.1</version>
    			<scope>provided</scope>
    		</dependency>
            
            <dependency>
			    <groupId>com.h2database</groupId>
			    <artifactId>h2</artifactId>
			    <version>1.4.200</version>
			</dependency>

			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>2.0.24</version>
			</dependency>


			<dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>2.13.3</version>
            </dependency>
            
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.13.3</version>
            </dependency>
            
            <dependency>
    			<groupId>jakarta.xml.bind</groupId>
    			<artifactId>jakarta.xml.bind-api</artifactId>
    			<version>${jaxb.version}</version>
			</dependency>

			<dependency>
			    <groupId>org.glassfish.jaxb</groupId>
		    	<artifactId>jaxb-runtime</artifactId>
		    	<version>${jaxb.version}</version>
			</dependency>
			
			<dependency>
    			<groupId>org.glassfish.jaxb</groupId>
    			<artifactId>jaxb-xjc</artifactId>
    			<version>${jaxb.version}</version>
	    	</dependency>
 
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_2.12</artifactId>
				<version>${spark.version}</version>
			</dependency>
		
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-repl_2.12</artifactId>
				<version>${spark.version}</version>
			</dependency>
					
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-sql_2.12</artifactId>
				<version>${spark.version}</version>
			</dependency>
            
			<dependency>
  				  <groupId>org.mockito</groupId>
    				<artifactId>mockito-core</artifactId>
   				 <version>3.3.0</version>
   				 <scope>test</scope>
			</dependency>
				
			<dependency>
		        <groupId>org.apache.tomcat.embed</groupId>
		        <artifactId>tomcat-embed-core</artifactId>
		        <version>${tomcat.version}</version>
		    </dependency>
		    
			<dependency>
			    <groupId>org.apache.tomcat.embed</groupId>
			    <artifactId>tomcat-embed-jasper</artifactId>
			    <version>${tomcat.version}</version>
			</dependency>
			
			 <dependency>
			    <groupId>org.apache.tomcat.embed</groupId>
			    <artifactId>tomcat-embed-el</artifactId>
			    <version>${tomcat.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.apache.tomcat.embed</groupId>
			    <artifactId>tomcat-embed-websocket</artifactId>
			    <version>${tomcat.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.apache.pdfbox</groupId>
			    <artifactId>pdfbox</artifactId>
			    <version>${pdfbox.version}</version>
			</dependency>
			
			<dependency>
	            <groupId>de.vandermeer</groupId>
	            <artifactId>asciitable</artifactId>
	            <version>0.3.2</version>
	        </dependency>
	        
	        <dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-csv</artifactId>
			    <version>1.8</version>
			</dependency>
			
			<dependency>
			    <groupId>org.asynchttpclient</groupId>
			    <artifactId>async-http-client</artifactId>
			    <version>2.11.0</version>
			</dependency>

			<dependency>
				<groupId>de.vandermeer</groupId>
				<artifactId>asciitable</artifactId>
				<version>0.3.2</version>
			</dependency>
									
        </dependencies>
        
    </dependencyManagement>

	<repositories>
        
   		<repository>
			<id>snapshot-repository.java.net</id>
			<name>Java.net Snapshot Repository for Maven</name>
			<url>https://maven.java.net/content/repositories/snapshots/</url>
			<layout>default</layout>
		</repository>
		
		<repository>
            <id>maven-central-repo</id>
            <name>Central Maven Repository</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
		
	</repositories>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub OWNER Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/DevWorxCo/data-cornucopia</url>
		</repository>
	</distributionManagement>



</project>

